import org.gradle.api.tasks.testing.logging.TestLogEvent

plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.4.31'
    id 'java-library'
    id 'org.jlleitschuh.gradle.ktlint' version '10.0.0'
    id 'com.github.johnrengelman.shadow' version '6.1.0'
}

group 'dev.skye.daisy'
def projectTitle = 'daisy-ktor'
project.setProperty('archivesBaseName', projectTitle)

def environmentVersion = System.getenv('VERSION')
if (environmentVersion == null || environmentVersion.isBlank()) {
    version = '0.0.1-SNAPSHOT'
} else {
    version = environmentVersion.replaceFirst("v", "")
}

repositories {
    mavenCentral()
}

dependencies {
    project(":core")

    // Kotlin
    implementation platform('org.jetbrains.kotlin:kotlin-bom')
    implementation platform('org.jetbrains.kotlinx:kotlinx-coroutines-bom:1.4.2')
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-jdk8'

    // Ktor
    implementation platform('io.ktor:ktor-bom:1.5.2')
    implementation 'io.ktor:ktor-server-core'
    implementation 'io.ktor:ktor-server-cio'

    // Local
    runtime 'org.slf4j:slf4j-simple:1.7.9'

    // Tests
    testImplementation 'org.jetbrains.kotlin:kotlin-test-junit'
}

compileJava {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

compileKotlin {
    kotlinOptions.useIR = true
    kotlinOptions.jvmTarget = JavaVersion.VERSION_11
}

test {
    testLogging {
        events = [
                TestLogEvent.SKIPPED,
                TestLogEvent.PASSED,
                TestLogEvent.FAILED,
                TestLogEvent.STANDARD_ERROR
        ]
        outputs.upToDateWhen { false }
        showStandardStreams = true
    }
}

shadowJar {
    archivesBaseName = "daisy-ktor"
    archiveClassifier = "all"
    mergeServiceFiles()
    exclude "META-INF/*.DSA"
    exclude "META-INF/*.RSA"
}